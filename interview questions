1] Virtual DOM in react?
2] New Features in ES6
3] use of keys in react
4] What is REdux
5] EXplain useMemo and useCallback
6] explain Lazy Loading?
7] Difference between controlled and uncontrolled components
8] Explain HIgher Order Component 
9] What is prop drilling and how to avoid that
10] EXplain routing
11] Explain LIfecycle methods of components
12] Explain context Api
13] Explain Promises
14] Explain HOisting and Closures

#Logical Building Questions : 

1]  First Letter capital from word
Ans: var temp = "shivani shirke"
      var demo = temp.charAt(0).toUpperCase()
      console.log(demo)

     const string = temp.split("")
     console.log(demo.concat(string.slice(1).join("")))

2)Reverse the number  
   input : 12 ;  output : 12,11,10 ,.....,1

Ans:

 const reverseNumb = (num)=>{
  var result =[]
  for(let i=num;i>0;i--){
      result.push(i)
  }
return result

}
const res = reverseNumb(12);
console.log(res)

3] Program to find occurance of word in sentence        #O.P= 2

Ans: 

let abc= "savani shivani shravani sakshi shivani"
let out=abc.split(" ");

let dd = 'shivani';
let count=0

for (let i=0;i<out.length;i++){
    if(dd==out[i]){
        count++;
    }
}
0
console.log(count);

4] Find the reverse of the string
Ans:  Solution1: 
     function reverseString(str) {
            let newString = "";
            for(i = str.length - 1; i>=0; i--){
                  newString += str[i];
               }
            return newString;    
      }
      
      const result = reverseString("Shivani");
      console.log(result)

      Solution2 : 
                           let name = "Shubbu"
                           let newString = "";
                           for(i= name.length - 1;i>=0;i--){
                                   newString += name[i]
                           }
                           console.log(newString)

5] Reverse a number 
   Input : 5678      Output : 8765
Ans:         var number = 5678;
             let result = 0;
                  while(number>0){
                         rem = number%10;
                         number = Math.floor(number/10)
                         result = result* 10 +  rem
                  }
             console.log(result)

6] Have the function SimpleAdding(num) add up all the numbers from 1 to num. 
  For example: if the input is 4 then your program should return 10 because 1 + 2 + 3 + 4 = 10. 
  For the test cases, the parameter num will be any number from 1 to 1000

Ans:  function CheckNum(num){
            let sum = 0
            for(i=0;i<=num;i++){
                  sum = sum + i
            }
            return sum

      }
      console.log(CheckNum(4))

7]  Factorial of 5                            
Ans:   function CheckNum(num){
       let sum = 1
       for(i=1;i<=num;i++){
              sum = sum * i
        }
           return sum
        }
         console.log(CheckNum(4))

8]  Swap a=20 , b=30                             
Ans:  Solution 1: 
     a = 20
     b = 30
     [a,b] = [b,a]
     console.log(a,b)

     Solution 2:
     a = a + b;
     b = a - b;
     a = a - b;
      console.log(a,b)

9] Take 2 parameter num1,num2 ,if num1 will be greater than num2 return true and if num1 is equal to num2 return -1           
Ans:  function CheckNum(num1,num2){
          let res = false;
          if(num1>num2){
               res = true;
          } else if(num1===num2){
             res = -1
          }
              return res;
       }
       console.log(CheckNum(6,5))

10]  Print even numbers from 1 to 10                                                    
Ans:          function even(n){
                     for(i=0;i<=n;i+=2){
                         console.log(i)
                     }
              }
              even(10)

11]  Print Odd Number from 1 to 10                                                         
Ans:          function even(n){
                      for(i=1;i<=n;i+=2){
                              console.log(i)
                      }
             }
             even(10)

12] Find the number is prime number or not?
Ans:    const prime = (n)=>{
              for(let i=2;i*2<n;i++){
                    if(n%i == 0){
                    return false
                    }
              }
        return `${n} is a prime number`
        }
        console.log(prime(12))

13]Find Square Root of a given number                                      
Ans:   var num = 25;
       result = num ** 0.5;
       console.log(result);

14] Program to check if the string is palindrome or not                     
Ans: function checkPalindrome(string) {

    // find the length of a string
    const len = string.length;

    // loop through half of the string
    for (let i = 0; i < len / 2; i++) {
        console.log(i)
        // check if first and last string are same
        if (string[i] !== string[len - 1 - i]) {
            return 'It is not a palindrome';
        }
    }
    return 'It is a palindrome';
}

// call the function
const value = checkPalindrome("madamm");
console.log(value);

15] Print star pattern                                                16-062023
Ans: let str = "*";
         for(i=0;i<5;i++){
         console.log(str);
         str += "*"
     }

16]   find frequency of each and every character in a string.
              Input: Engineer
              Output : e3n2g1i1r1
Ans:   function char(n){
         let temp = {}
         for(i=0;i<n.length;i++){     
              if(!temp[n[i]]){
                    temp[n[i]]=1     
              }  else {
                 temp[n[i]]++
         }
       }
          let result =''
          for(let key in temp){
                 result += `${key}${temp[key]}`
              }
               console.log(result)
           }
           char("Engineer")

17] WAP to print Fibonacci series with recursion                                 22-06-2023
Ans:  let input=10;

         if(input<0){
                console.log("enter Positive Number")
         } else {
                    for(let i=0;i<input;i++){
                    console.log(fibonacciNum(i))
                }
         }

         function fibonacciNum(num){
              if(num<2){
                   return num
              } else {
                  return fibonacciNum(num-1)+fibonacciNum(num-2)
              }
         }

18] WAP to print Fibonacci series without recursion.
Ans. 
let userInput=5;
 
if(userInput<0){
     console.log("Enter Positive Number")
}else{
     fibonacci(userInput)
 }

function fibonacci(num){
    if(num<2){
        console.log(num)
    }else{
        let a=0;
        let b=1;
        let c;
        console.log(a);
        console.log(b);
        for(var m=2;m<num;m++){
            c=a+b;
            console.log(c)
            a=b;
            b=c
        }
    }
}

19] Missing element in array, multiple missing element
Ans:  function a (arr =[1,2,4,5,6,8]){
    let tempArr =[];
    let missing = [];
    for(let i =1;i<=arr[arr.length-1];i++){
        tempArr.push(i);
    }
    for(let i=0;i<tempArr.length;i++){
        let found = false;
        for(let j=0;j<arr.length;j++){
            if(tempArr[i] == arr[j]){
                found = true
            }
        }
        if(!found){
            missing.push(tempArr[i])
        }
    }
    
    return missing
}

console.log(a())

20]  WAP to find missing elements from the array?
Ans:    function findMissing(arr){
          let i;
          let temp = [];
             for (i = 0; i <= arr.length; i++) {
                        temp[i] = 0;
             }
 
             for (i = 0; i < arr.length; i++) {
                       temp[arr[i] - 1] = 1;
             }
        
         let ans=0;
             for(i=0;i<=arr.length;i++){
                   if(temp[i] == 0){
                         ans = i + 1;
                         console.log(ans);  
                   }
             }
         }
        findMissing([1,2,4,5,8])


21] Program to sort array in ascending order   #O.P= [1,3,4,5,9]

let arr=[5,3,9,4,1]
for (let i=0; i<arr.length; i++){
    for (let j=0; j<arr.length; j++){
        if(arr[j]>arr[j+1]){
          let temp=arr[j];
          arr[j]=arr[j+1];
          arr[j+1]=temp;
         }
     }
}
console.log(arr);

22] Program to sort array in descending order    #O.P= [9,5,4,3,1]

let arr=[5,3,9,4,1]
for (let i=0; i<arr.length; i++){
    for (let j=0; j<arr.length; j++){
        if(arr[j]<arr[j+1]){
          let temp=arr[j];
          arr[j]=arr[j+1];
          arr[j+1]=temp;
         }
     }
}
console.log(arr);

23] Program to print number divisible by 3 from 1-10    #O.P=3 6 9

   let a=1;
   do{
        if(a%3==0){
            console.log(a)
      }
      a++;
   }while(a<=10)

24] Program to print 1-10 using do while loop          #O.P= 1 2 3 4 5 6 7 8 9 10
   
   let a=1;
   do{
        console.log(a);
        a++;
      }while(a<=10)

25] Program to print 1-10 using for loop              #O.P= 1 2 3 4 5 6 7 8 9 10
   
   for(n=1; n<=10; n++) {
      console.log(n)

    }


26] Program to print 1-10 using while loop           #O.P= 1 2 3 4 5 6 7 8 9 10
   let n=1;
   while(n<=10) {
      console.log(n)

      n++;
   }

27] Program to find square of number from 1-100     #O.P = 1,4,9,16,25,36,49,64,81,100
  
  for (var i=1; i<=10; i++){
    console.log(i*i);
  }

28] Program to reverse an array without using reverse function     #O.P = [7, 6, 5, 4, 3, 2, 1]

  function reverse(array) {
  var output = [];
  while (array.length) {
    output.push(array.pop());
  }

  return output;
}

console.log(reverse([1, 2, 3, 4, 5, 6, 7]));


29] //WAP to find the second largest number in an array without sorting

const secondLargest = (...rest)=>{
  let first = -1 ,second = -1
  for(let val of rest){
    if(val > first){
      second = first 
      first = val 
    }else if (val > second && val != first){
      second = val
    }
  }
  console.log(second);
  }

// secondLargest(1,3,2,4,5,19,23,18)
  

30]  //WAP with 2 different logic, to find all duplicate number in an array
  const duplicateNumber = (arr)=>{
    newArr = [];
    for (let i = 0; i <  arr.length - 1; i++) {
      for (let j = i + 1; j < arr.length; j++) {
      if (arr[i] === arr[j]) {
         newArr.push(arr[i]);
         }
      }
   }
  
    return newArr
  }
  console.log(duplicateNumber([1, 2, 1, 3, 4, 3, 5]))

31] function palindrome(str){
  let compare_string = '';
  for(let i=str.length-1;i>=0;i--){
    compare_string+=str[i]
  }
  console.log(compare_string)
  return str === compare_string
}
